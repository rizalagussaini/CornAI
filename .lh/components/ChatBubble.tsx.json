{
    "sourceFile": "components/ChatBubble.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1747986071020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747992070388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,46 +7,34 @@\n }\r\n \r\n const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser }) => {\r\n   return (\r\n-    <View style={[styles.container, isUser ? styles.rightAlign : styles.leftAlign]}>\r\n+    <View style={[styles.container, isUser ? styles.right : styles.left]}>\r\n       <View style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]}>\r\n-        <Text style={[styles.text, isUser ? styles.userText : styles.botText]}>{message}</Text>\r\n+        <Text style={styles.text}>{message}</Text>\r\n       </View>\r\n     </View>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n-  container: {\r\n-    marginVertical: 4,\r\n-    paddingHorizontal: 10,\r\n-  },\r\n-  rightAlign: {\r\n-    alignItems: 'flex-end',\r\n-  },\r\n-  leftAlign: {\r\n-    alignItems: 'flex-start',\r\n-  },\r\n+  container: { marginVertical: 4, paddingHorizontal: 10 },\r\n+  right: { alignItems: 'flex-end' },\r\n+  left: { alignItems: 'flex-start' },\r\n   bubble: {\r\n     maxWidth: '80%',\r\n+    padding: 10,\r\n     borderRadius: 12,\r\n-    padding: 10,\r\n   },\r\n   userBubble: {\r\n     backgroundColor: '#c7d8ff',\r\n   },\r\n   botBubble: {\r\n-    backgroundColor: '#f0f0f0',\r\n+    backgroundColor: '#f1f1f1',\r\n   },\r\n-  userText: {\r\n-    color: '#1a237e',\r\n-  },\r\n-  botText: {\r\n-    color: '#333',\r\n-  },\r\n   text: {\r\n     fontSize: 14,\r\n+    color: '#333',\r\n   },\r\n });\r\n \r\n export default ChatBubble;\r\n"
                },
                {
                    "date": 1747992906465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,17 @@\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n-  container: { marginVertical: 4, paddingHorizontal: 10 },\r\n-  right: { alignItems: 'flex-end' },\r\n-  left: { alignItems: 'flex-start' },\r\n+  container: {\r\n+    marginVertical: 4,\r\n+  },\r\n+  right: {\r\n+    alignItems: 'flex-end',\r\n+  },\r\n+  left: {\r\n+    alignItems: 'flex-start',\r\n+  },\r\n   bubble: {\r\n     maxWidth: '80%',\r\n     padding: 10,\r\n     borderRadius: 12,\r\n@@ -37,4 +43,6 @@\n   },\r\n });\r\n \r\n export default ChatBubble;\r\n+\r\n+export default ChatBubble;\r\n"
                },
                {
                    "date": 1747994655031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,16 @@\n   message: string;\r\n   isUser: boolean;\r\n }\r\n \r\n-const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser }) => {\r\n+const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser, onPress }) => {\r\n+  const Wrapper = onPress ? TouchableOpacity : View;\r\n+\r\n   return (\r\n     <View style={[styles.container, isUser ? styles.right : styles.left]}>\r\n-      <View style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]}>\r\n+      <Wrapper style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]} onPress={onPress}>\r\n         <Text style={styles.text}>{message}</Text>\r\n-      </View>\r\n+      </Wrapper>\r\n     </View>\r\n   );\r\n };\r\n \r\n@@ -43,6 +45,4 @@\n   },\r\n });\r\n \r\n export default ChatBubble;\r\n-\r\n-export default ChatBubble;\r\n"
                },
                {
                    "date": 1747994662841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,14 @@\n   message: string;\r\n   isUser: boolean;\r\n }\r\n \r\n-const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser, onPress }) => {\r\n-  const Wrapper = onPress ? TouchableOpacity : View;\r\n-\r\n+const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser }) => {\r\n   return (\r\n     <View style={[styles.container, isUser ? styles.right : styles.left]}>\r\n-      <Wrapper style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]} onPress={onPress}>\r\n+      <View style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]}>\r\n         <Text style={styles.text}>{message}</Text>\r\n-      </Wrapper>\r\n+      </View>\r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747994691250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,16 @@\n   message: string;\r\n   isUser: boolean;\r\n }\r\n \r\n-const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser }) => {\r\n+const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser, onPress }) => {\r\n+  const Wrapper = onPress ? TouchableOpacity : View;\r\n+\r\n   return (\r\n     <View style={[styles.container, isUser ? styles.right : styles.left]}>\r\n-      <View style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]}>\r\n+      <Wrapper style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]} onPress={onPress}>\r\n         <Text style={styles.text}>{message}</Text>\r\n-      </View>\r\n+      </Wrapper>\r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747994815255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \r\n interface ChatBubbleProps {\r\n   message: string;\r\n   isUser: boolean;\r\n+  onPress?: () => void;\r\n }\r\n \r\n const ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser, onPress }) => {\r\n   const Wrapper = onPress ? TouchableOpacity : View;\r\n"
                },
                {
                    "date": 1747994916645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React from 'react';\r\n-import { View, Text, StyleSheet } from 'react-native';\r\n+import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n \r\n+\r\n interface ChatBubbleProps {\r\n   message: string;\r\n   isUser: boolean;\r\n   onPress?: () => void;\r\n"
                }
            ],
            "date": 1747986071020,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\ninterface ChatBubbleProps {\r\n  message: string;\r\n  isUser: boolean;\r\n}\r\n\r\nconst ChatBubble: React.FC<ChatBubbleProps> = ({ message, isUser }) => {\r\n  return (\r\n    <View style={[styles.container, isUser ? styles.rightAlign : styles.leftAlign]}>\r\n      <View style={[styles.bubble, isUser ? styles.userBubble : styles.botBubble]}>\r\n        <Text style={[styles.text, isUser ? styles.userText : styles.botText]}>{message}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 4,\r\n    paddingHorizontal: 10,\r\n  },\r\n  rightAlign: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  leftAlign: {\r\n    alignItems: 'flex-start',\r\n  },\r\n  bubble: {\r\n    maxWidth: '80%',\r\n    borderRadius: 12,\r\n    padding: 10,\r\n  },\r\n  userBubble: {\r\n    backgroundColor: '#c7d8ff',\r\n  },\r\n  botBubble: {\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  userText: {\r\n    color: '#1a237e',\r\n  },\r\n  botText: {\r\n    color: '#333',\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default ChatBubble;\r\n"
        }
    ]
}